name: Build Wheels

on:
  push:
    tags: ['v*']
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          # Build wheels for Python 3.8-3.12
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          # Skip 32-bit builds and musl builds (can be enabled later if needed)
          CIBW_SKIP: "*-win32 *-musllinux*"
          # Test command to verify wheels work
          CIBW_TEST_COMMAND: "python -c \"import enhanced_adaptive_dbscan; print('Import test passed')\""
          # Install test dependencies
          CIBW_TEST_REQUIRES: "pytest numpy"

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install build dependencies
        run: python -m pip install build

      - name: Build sdist
        run: python -m build --sdist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz
