name: CI - Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  id-token: write  # For Codecov OIDC

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12"]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Upgrade pip and base tools
        run: |
          python -m pip install --upgrade pip

      - name: Install requirements.txt (if present)
        if: hashFiles('requirements.txt') != ''
        run: python -m pip install -r requirements.txt

      - name: Install package with test dependencies
        run: python -m pip install -e .[test]

      - name: Test with pytest and coverage
        run: |
          pytest -q --cov=enhanced_adaptive_dbscan --cov-report=term-missing --cov-report=xml

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          fail_ci_if_error: false  # Don't fail CI if Codecov is down

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[dev]

      - name: Lint with Ruff
        run: |
          ruff check --output-format=github .
          ruff format --check .

      - name: Type check with mypy
        run: mypy .
